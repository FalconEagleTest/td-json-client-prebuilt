name: tdlib-build


  
        
on:
  workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'
          required: true
          default: 'warning'
          type: choice
          options:
          - info
          - warning
          - debug
        tags:
          description: 'Manual Run'
          required: false
          type: boolean
        environment:
          description: 'Environment to run tests against'
          type: environment
          required: true
  push:
    paths:
      - '.github/workflows/td-version.json'
      - '.github/workflows/build-tdlib.yml'
      - 'https://github.com/tdlib/td'

jobs:
  build-android:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: JSON to variables
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: '.github/workflows/td-version.json'
          prefix: td

      - name: setup
        run: |
          sudo apt-get install -y make git zlib1g-dev libssl-dev gperf cmake clang libc++-dev libc++abi-dev ninja-build

      - name: download ndk
        run: |
          mkdir /opt/android-ndk-tmp
          cd /opt/android-ndk-tmp
          wget -q https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip
          unzip -q android-ndk-r20-linux-x86_64.zip
          mv ./android-ndk-r20 /opt/android-ndk
          cd /opt/android-ndk
          rm -rf /opt/android-ndk-tmp
          export PATH=$PATH:/opt/android-ndk

      - name: clone
        run: |
          git clone https://github.com/tdlib/td.git
          cd td
          git checkout ${{ env.td_commit_hash }}
          git show --summary

      - name: setup td
        run: |
          cd td/example
          curl https://github.com/tdlib/td/files/4746919/libtdjsonandroid.zip -o libtdjsonandroid.zip -L
          unzip -o libtdjsonandroid.zip
          mv libtdjsonandroid/* .
          rmdir libtdjsonandroid
          rm libtdjsonandroid.zip
          chmod +x build.sh
          chmod +x export.sh
          chmod +x build-all.sh
          chmod +x third_party/crypto/build.sh
          chmod +x third_party/crypto/build-all.sh
          sed -i '3s/.*/set(TD_DIR ${CMAKE_CURRENT_SOURCE_DIR}\/..)/' CMakeLists.txt
          curl https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1g.tar.gz -o third_party/crypto/openssl-OpenSSL_1_1_1g.tar.gz -L
          sed -i '5s/.*/cmake .. -DCMAKE_TOOLCHAIN_FILE=\/opt\/android-ndk\/build\/cmake\/android.toolchain.cmake -DCMAKE_BUILD_TYPE=MinSizeRel -GNinja -DANDROID_ABI=${ABI} || exit 1/' build.sh
          sed -i '1s/.*/#!\/bin\/bash/' third_party/crypto/build.sh
          sed -i '21s/.*/HOST_ARCH=linux-x86_64/' third_party/crypto/build.sh
          sed -i '20s/.*/export ANDROID_NDK=\/opt\/android-ndk/' third_party/crypto/build.sh

      - name: build ssl
        run: |
          export ANDROID_NDK_HOME=/opt/android-ndk
          export ANDROID_NDK_ROOT=/opt/android-ndk
          cd td/example/third_party/crypto
          ./build-all.sh

      - name: build
        run: |
          cd td/example
          ./export.sh

#      - name: fake build
#        run: |
#          mkdir -p td/example/libs
#          mkdir -p td/example/libs/arm64-v8a
#          mkdir -p td/example/libs/armeabi-v7a
#          mkdir -p td/example/libs/x86
#          mkdir -p td/example/libs/x86_64
#          echo arm64-v8a > td/example/libs/arm64-v8a/libtdjsonandroid.so
#          echo arm64-v8a > td/example/libs/arm64-v8a/libtdjsonandroid.so.debug
#          echo armeabi-v7a > td/example/libs/armeabi-v7a/libtdjsonandroid.so
#          echo armeabi-v7a > td/example/libs/armeabi-v7a/libtdjsonandroid.so.debug
#          echo x86 > td/example/libs/x86/libtdjsonandroid.so
#          echo x86 > td/example/libs/x86/libtdjsonandroid.so.debug
#          echo x86_64 > td/example/libs/x86_64/libtdjsonandroid.so
#          echo x86_64 > td/example/libs/x86_64/libtdjsonandroid.so.debug

      - name: zip
        run: |
          cd td/example/libs
          zip libs.zip arm64-v8a/libtdjsonandroid.so armeabi-v7a/libtdjsonandroid.so x86/libtdjsonandroid.so x86_64/libtdjsonandroid.so

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: android-${{ env.td_version }}-${{ env.td_commit_hash }}
          name: Android ${{ env.td_version }}-${{ env.td_commit_hash }}
          body: https://github.com/tdlib/td/tree/${{ env.td_commit_hash }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'td/example/libs/libs.zip'
      

